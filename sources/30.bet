; ##############################
; # Programm: 30.asm           #
; # Autor:    Christian Gerbig #
; # Datum:    17.04.2024       #
; # Version:  1.0 beta         #
; # CPU:      68020+           #
; # FASTMEM:  -                #
; # Chipset:  AGA              #
; # OS:       3.0+             #
; ##############################

; V1.0 beta
; First release


  SECTION code_and_variables,CODE

  MC68040


; ** Library-Includes V.3.x nachladen **
; --------------------------------------
  ;INCDIR  "OMA:include/"
  INCDIR "Daten:include3.5/"

  INCLUDE "dos/dos.i"
  INCLUDE "dos/dosextens.i"
  INCLUDE "libraries/dos_lib.i"

  INCLUDE "exec/exec.i"
  INCLUDE "exec/exec_lib.i"

  INCLUDE "graphics/GFXBase.i"
  INCLUDE "graphics/videocontrol.i"
  INCLUDE "graphics/graphics_lib.i"

  INCLUDE "intuition/intuition.i"
  INCLUDE "intuition/intuition_lib.i"

  INCLUDE "resources/cia_lib.i"

  INCLUDE "hardware/adkbits.i"
  INCLUDE "hardware/blit.i"
  INCLUDE "hardware/cia.i"
  INCLUDE "hardware/custom.i"
  INCLUDE "hardware/dmabits.i"
  INCLUDE "hardware/intbits.i"

  INCDIR "Daten:Asm-Sources.AGA/normsource-includes/"


; ** Konstanten **
; ----------------

  INCLUDE "equals.i"

requires_68030              EQU FALSE  
requires_68040              EQU FALSE
requires_68060              EQU FALSE
requires_fast_memory        EQU FALSE
requires_multiscan_monitor  EQU FALSE

workbench_start             EQU FALSE
workbench_fade              EQU FALSE
text_output                 EQU FALSE

pt_v3.0b

  IFD pt_v2.3a
    INCLUDE "music-tracker/pt2-equals.i"
  ENDC
  IFD pt_v3.0b
    INCLUDE "music-tracker/pt3-equals.i"
  ENDC
;pt_mute_volume
pt_ciatiming                EQU TRUE
pt_usedfx                   EQU %1101110000101101
pt_usedefx                  EQU %0000100000000000
pt_finetune                 EQU FALSE
  IFD pt_v3.0b
pt_metronome                EQU FALSE
  ENDC
pt_track_channel_volumes    EQU FALSE
pt_track_channel_periods    EQU FALSE
pt_music_fader              EQU TRUE
pt_split_module             EQU TRUE

DMABITS                     EQU DMAF_SPRITE+DMAF_COPPER+DMAF_MASTER+DMAF_SETCLR

  IFEQ pt_ciatiming
INTENABITS                  EQU INTF_EXTER+INTF_INTEN+INTF_SETCLR
  ELSE
INTENABITS                  EQU INTF_VERTB+INTF_EXTER+INTF_INTEN+INTF_SETCLR
  ENDC

CIAAICRBITS                 EQU CIAICRF_SETCLR
  IFEQ pt_ciatiming
CIABICRBITS                 EQU CIAICRF_TA+CIAICRF_TB+CIAICRF_SETCLR
  ELSE
CIABICRBITS                 EQU CIAICRF_TB+CIAICRF_SETCLR
  ENDC

COPCONBITS                  EQU TRUE

pf1_x_size1                 EQU 0
pf1_y_size1                 EQU 0
pf1_depth1                  EQU 0
pf1_x_size2                 EQU 0
pf1_y_size2                 EQU 0
pf1_depth2                  EQU 0
pf1_x_size3                 EQU 0
pf1_y_size3                 EQU 0
pf1_depth3                  EQU 0
pf1_colors_number           EQU 1

pf2_x_size1                 EQU 0
pf2_y_size1                 EQU 0
pf2_depth1                  EQU 0
pf2_x_size2                 EQU 0
pf2_y_size2                 EQU 0
pf2_depth2                  EQU 0
pf2_x_size3                 EQU 0
pf2_y_size3                 EQU 0
pf2_depth3                  EQU 0
pf2_colors_number           EQU 0
pf_colors_number            EQU pf1_colors_number+pf2_colors_number
pf_depth                    EQU pf1_depth3+pf2_depth3

extra_pf_number             EQU 2
extra_pf1_x_size            EQU 384
extra_pf1_y_size            EQU 26
extra_pf1_depth             EQU 2
extra_pf2_x_size            EQU 384
extra_pf2_y_size            EQU 26
extra_pf2_depth             EQU 2

spr_number                  EQU 8
spr_x_size1                 EQU 0
spr_x_size2                 EQU 64
spr_depth                   EQU 2
spr_colors_number           EQU 16
spr_odd_color_table_select  EQU 1
spr_even_color_table_select EQU 1
spr_used_number             EQU 8

  IFD pt_v2.3a
audio_memory_size           EQU 0
  ENDC
  IFD pt_v3.0b
audio_memory_size           EQU 2
  ENDC

disk_memory_size            EQU 0

extra_memory_size           EQU 0

chip_memory_size            EQU 0

AGA_OS_Version              EQU 39

  IFEQ pt_ciatiming
CIABCRABITS                 EQU CIACRBF_LOAD
  ENDC
CIABCRBBITS                 EQU CIACRBF_LOAD+CIACRBF_RUNMODE ;Oneshot mode
CIAA_TA_value               EQU 0
CIAA_TB_value               EQU 0
  IFEQ pt_ciatiming
CIAB_TA_value               EQU 14187 ;= 0.709379 MHz * [20000 µs = 50 Hz duration for one frame on a PAL machine]
;CIAB_TA_value               EQU 14318 ;= 0.715909 MHz * [20000 µs = 50 Hz duration for one frame on a NTSC machine]
  ELSE
CIAB_TA_value               EQU 0
  ENDC
CIAB_TB_value               EQU 362 ;= 0.709379 MHz * [511.43 µs = Lowest note period C1 with Tuning=-8 * 2 / PAL clock constant = 907*2/3546895 ticks per second]
                                 ;= 0.715909 MHz * [506.76 µs = Lowest note period C1 with Tuning=-8 * 2 / NTSC clock constant = 907*2/3579545 ticks per second]
CIAA_TA_continuous          EQU FALSE
CIAA_TB_continuous          EQU FALSE
  IFEQ pt_ciatiming
CIAB_TA_continuous          EQU TRUE
  ELSE
CIAB_TA_continuous          EQU FALSE
  ENDC
CIAB_TB_continuous          EQU FALSE

beam_position               EQU $133 ;Wegen Music-Fader

MINROW                      EQU VSTART_256_lines

spr_pixel_per_datafetch     EQU 64 ;4x

; **** Viewport 1 ****
vp1_pixel_per_line          EQU 320
vp1_visible_pixels_number   EQU 320
vp1_visible_lines_number    EQU 26

vp1_VSTART                  EQU MINROW
vp1_VSTOP                   EQU vp1_VSTART+vp1_visible_lines_number

vp1_pf_pixel_per_datafetch  EQU 64 ;4x
vp1_DDFSTRTBITS             EQU DDFSTART_320_pixel
vp1_DDFSTOPBITS             EQU DDFSTOP_320_pixel_4x

vp1_pf1_colors_number       EQU 2

extra_pf1_plane_width       EQU extra_pf1_x_size/8
vp1_data_fetch_width        EQU vp1_pixel_per_line/8
vp1_pf1_plane_moduli        EQU (extra_pf1_plane_width*(extra_pf1_depth-1))+extra_pf1_plane_width-vp1_data_fetch_width

BPLCON0BITS                 EQU BPLCON0F_ECSENA+((pf_depth>>3)*BPLCON0F_BPU3)+(BPLCON0F_COLOR)+((pf_depth&$07)*BPLCON0F_BPU0) ;lores
BPLCON3BITS1                EQU BPLCON3F_BRDSPRT+BPLCON3F_SPRES0
BPLCON3BITS2                EQU BPLCON3BITS1+BPLCON3F_LOCT
BPLCON4BITS                 EQU (BPLCON4F_OSPRM4*spr_odd_color_table_select)+(BPLCON4F_ESPRM4*spr_even_color_table_select)
FMODEBITS                   EQU FMODEF_SPR32+FMODEF_SPAGEM+FMODEF_SSCAN2
COLOR00BITS                 EQU $001122

vp1_BPLCON0BITS             EQU BPLCON0F_ECSENA+((extra_pf1_depth>>3)*BPLCON0F_BPU3)+(BPLCON0F_COLOR)+((extra_pf1_depth&$07)*BPLCON0F_BPU0) ;lores
vp1_BPLCON1BITS             EQU TRUE
vp1_BPLCON2BITS             EQU TRUE
vp1_BPLCON3BITS1            EQU BPLCON3BITS1
vp1_BPLCON3BITS2            EQU vp1_BPLCON3BITS1+BPLCON3F_LOCT
vp1_BPLCON4BITS             EQU BPLCON4BITS
vp1_FMODEBITS               EQU FMODEBITS+FMODEF_BPL32+FMODEF_BPAGEM
vp1_COLOR00BITS             EQU COLOR00BITS

cl1_HSTART                  EQU $00
cl1_VSTART                  EQU beam_position&$ff

; **** PT-Replay ****
pt_fade_out_delay           EQU 2 ;Ticks

; **** Hintergrundbild ****
bg_image_x_size             EQU 256
bg_image_plane_width        EQU bg_image_x_size/8
bg_image_y_size             EQU 208
bg_image_depth              EQU 4
bg_image_x_position         EQU 16
bg_image_y_position         EQU MINROW


; ## Makrobefehle ##
; ------------------

  INCLUDE "macros.i"


; ** Struktur, die alle Exception-Vektoren-Offsets enthält **
; -----------------------------------------------------------

  INCLUDE "except-vectors-offsets.i"


; ** Struktur, die alle Eigenschaften des Extra-Playfields enthält **
; -------------------------------------------------------------------

  INCLUDE "extra-pf-attributes-structure.i"


; ** Struktur, die alle Eigenschaften der Sprites enthält **
; ----------------------------------------------------------

  INCLUDE "sprite-attributes-structure.i"


; ** Struktur, die alle Registeroffsets der ersten Copperliste enthält **
; -----------------------------------------------------------------------
  RSRESET

cl1_extension1      RS.B 0

cl1_ext1_DDFSTRT    RS.L 1
cl1_ext1_DDFSTOP    RS.L 1
cl1_ext1_BPLCON1    RS.L 1
cl1_ext1_BPLCON2    RS.L 1
cl1_ext1_BPLCON3_1  RS.L 1
cl1_ext1_BPL1MOD    RS.L 1
cl1_ext1_BPL2MOD    RS.L 1
cl1_ext1_BPLCON4    RS.L 1
cl1_ext1_FMODE      RS.L 1
cl1_ext1_BPL1PTH    RS.L 1
cl1_ext1_BPL1PTL    RS.L 1

cl1_extension1_SIZE RS.B 0


  RSRESET

cl1_begin            RS.B 0

  INCLUDE "copperlist1-offsets.i"

cl1_extension1_entry RS.B cl1_extension1_SIZE

cl1_WAIT1            RS.L 1
cl1_WAIT2            RS.L 1
cl1_INTREQ           RS.L 1

cl1_end              RS.L 1

copperlist1_SIZE     RS.B 0


; ** Struktur, die alle Registeroffsets der zweiten Copperliste enthält **
; ------------------------------------------------------------------------
  RSRESET

cl2_begin        RS.B 0

cl2_end          RS.L 1

copperlist2_SIZE RS.B 0


; ** Konstanten für die größe der Copperlisten **
; -----------------------------------------------
cl1_size1           EQU 0
cl1_size2           EQU 0
cl1_size3           EQU copperlist1_SIZE
cl2_size1           EQU 0
cl2_size2           EQU 0
cl2_size3           EQU copperlist2_SIZE


; ** Sprite0-Zusatzstruktur **
; ----------------------------
  RSRESET

spr0_extension1       RS.B 0

spr0_ext1_header      RS.L 1*(spr_pixel_per_datafetch/16)
spr0_ext1_planedata   RS.L (spr_pixel_per_datafetch/16)*bg_image_y_size

spr0_extension1_SIZE  RS.B 0

; ** Sprite0-Hauptstruktur **
; ---------------------------
  RSRESET

spr0_begin            RS.B 0

spr0_extension1_entry RS.B spr0_extension1_SIZE

spr0_end              RS.L 1*(spr_pixel_per_datafetch/16)

sprite0_SIZE          RS.B 0

; ** Sprite1-Zusatzstruktur **
; ----------------------------
  RSRESET

spr1_extension1       RS.B 0

spr1_ext1_header      RS.L 1*(spr_pixel_per_datafetch/16)
spr1_ext1_planedata   RS.L (spr_pixel_per_datafetch/16)*bg_image_y_size

spr1_extension1_SIZE  RS.B 0

; ** Sprite1-Hauptstruktur **
; ---------------------------
  RSRESET

spr1_begin            RS.B 0

spr1_extension1_entry RS.B spr1_extension1_SIZE

spr1_end              RS.L 1*(spr_pixel_per_datafetch/16)

sprite1_SIZE          RS.B 0

; ** Sprite2-Zusatzstruktur **
; ----------------------------
  RSRESET

spr2_extension1       RS.B 0

spr2_ext1_header      RS.L 1*(spr_pixel_per_datafetch/16)
spr2_ext1_planedata   RS.L (spr_pixel_per_datafetch/16)*bg_image_y_size

spr2_extension1_SIZE  RS.B 0

; ** Sprite2-Hauptstruktur **
; ---------------------------
  RSRESET

spr2_begin            RS.B 0

spr2_extension1_entry RS.B spr2_extension1_SIZE

spr2_end              RS.L 1*(spr_pixel_per_datafetch/16)

sprite2_SIZE          RS.B 0

; ** Sprite3-Zusatzstruktur **
; ----------------------------
  RSRESET

spr3_extension1       RS.B 0

spr3_ext1_header      RS.L 1*(spr_pixel_per_datafetch/16)
spr3_ext1_planedata   RS.L (spr_pixel_per_datafetch/16)*bg_image_y_size

spr3_extension1_SIZE  RS.B 0

; ** Sprite3-Hauptstruktur **
; ---------------------------
  RSRESET

spr3_begin            RS.B 0

spr3_extension1_entry RS.B spr3_extension1_SIZE

spr3_end              RS.L 1*(spr_pixel_per_datafetch/16)

sprite3_SIZE          RS.B 0

; ** Sprite4-Zusatzstruktur **
; ----------------------------
  RSRESET

spr4_extension1       RS.B 0

spr4_ext1_header      RS.L 1*(spr_pixel_per_datafetch/16)
spr4_ext1_planedata   RS.L (spr_pixel_per_datafetch/16)*bg_image_y_size

spr4_extension1_SIZE  RS.B 0

; ** Sprite4-Hauptstruktur **
; ---------------------------
  RSRESET

spr4_begin            RS.B 0

spr4_extension1_entry RS.B spr4_extension1_SIZE

spr4_end              RS.L 1*(spr_pixel_per_datafetch/16)

sprite4_SIZE          RS.B 0

; ** Sprite5-Zusatzstruktur **
; ----------------------------
  RSRESET

spr5_extension1       RS.B 0

spr5_ext1_header      RS.L 1*(spr_pixel_per_datafetch/16)
spr5_ext1_planedata   RS.L (spr_pixel_per_datafetch/16)*bg_image_y_size

spr5_extension1_SIZE  RS.B 0

; ** Sprite5-Hauptstruktur **
; ---------------------------
  RSRESET

spr5_begin            RS.B 0

spr5_extension1_entry RS.B spr5_extension1_SIZE

spr5_end              RS.L 1*(spr_pixel_per_datafetch/16)

sprite5_SIZE          RS.B 0

; ** Sprite6-Zusatzstruktur **
; ----------------------------
  RSRESET

spr6_extension1       RS.B 0

spr6_ext1_header      RS.L 1*(spr_pixel_per_datafetch/16)
spr6_ext1_planedata   RS.L (spr_pixel_per_datafetch/16)*bg_image_y_size

spr6_extension1_SIZE  RS.B 0

; ** Sprite6-Hauptstruktur **
; ---------------------------
  RSRESET

spr6_begin            RS.B 0

spr6_extension1_entry RS.B spr6_extension1_SIZE

spr6_end              RS.L 1*(spr_pixel_per_datafetch/16)

sprite6_SIZE          RS.B 0

; ** Sprite7-Zusatzstruktur **
; ----------------------------
  RSRESET

spr7_extension1       RS.B 0

spr7_ext1_header      RS.L 1*(spr_pixel_per_datafetch/16)
spr7_ext1_planedata   RS.L (spr_pixel_per_datafetch/16)*bg_image_y_size

spr7_extension1_SIZE  RS.B 0

; ** Sprite7-Hauptstruktur **
; ---------------------------
  RSRESET

spr7_begin            RS.B 0

spr7_extension1_entry RS.B spr7_extension1_SIZE

spr7_end              RS.L 1*(spr_pixel_per_datafetch/16)

sprite7_SIZE          RS.B 0


; ** Konstanten für die Größe der Spritestrukturen **
; ---------------------------------------------------
spr0_x_size1     EQU spr_x_size1
spr0_y_size1     EQU 0
spr1_x_size1     EQU spr_x_size1
spr1_y_size1     EQU 0
spr2_x_size1     EQU spr_x_size1
spr2_y_size1     EQU 0
spr3_x_size1     EQU spr_x_size1
spr3_y_size1     EQU 0
spr4_x_size1     EQU spr_x_size1
spr4_y_size1     EQU 0
spr5_x_size1     EQU spr_x_size1
spr5_y_size1     EQU 0
spr6_x_size1     EQU spr_x_size1
spr6_y_size1     EQU 0
spr7_x_size1     EQU spr_x_size1
spr7_y_size1     EQU 0

spr0_x_size2     EQU spr_x_size2
spr0_y_size2     EQU sprite0_SIZE/(spr_x_size2/8)
spr1_x_size2     EQU spr_x_size2
spr1_y_size2     EQU sprite1_SIZE/(spr_x_size2/8)
spr2_x_size2     EQU spr_x_size2
spr2_y_size2     EQU sprite2_SIZE/(spr_x_size2/8)
spr3_x_size2     EQU spr_x_size2
spr3_y_size2     EQU sprite3_SIZE/(spr_x_size2/8)
spr4_x_size2     EQU spr_x_size2
spr4_y_size2     EQU sprite4_SIZE/(spr_x_size2/8)
spr5_x_size2     EQU spr_x_size2
spr5_y_size2     EQU sprite5_SIZE/(spr_x_size2/8)
spr6_x_size2     EQU spr_x_size2
spr6_y_size2     EQU sprite6_SIZE/(spr_x_size2/8)
spr7_x_size2     EQU spr_x_size2
spr7_y_size2     EQU sprite7_SIZE/(spr_x_size2/8)


; ** Struktur, die alle Variablenoffsets enthält **
; -------------------------------------------------

  INCLUDE "variables-offsets.i"

; ** Relative offsets for variables **
; ------------------------------------

; **** PT-Replay ****
  IFD pt_v2.3a
    INCLUDE "music-tracker/pt2-variables-offsets.i"
  ENDC
  IFD pt_v3.0b
    INCLUDE "music-tracker/pt3-variables-offsets.i"
  ENDC

; **** Viewport 1 ****
vp1_pf1_construction2 RS.L 1
vp1_pf1_display       RS.L 1

variables_SIZE        RS.B 0


; **** PT-Replay ****
; ** PT-Song-Structure **
; -----------------------
  INCLUDE "music-tracker/pt-song-structure.i"

; ** Temporary channel structure **
; ---------------------------------
  INCLUDE "music-tracker/pt-temp-channel-structure.i"


; ## Beginn des Initialisierungsprogramms ##
; ------------------------------------------

  INCLUDE "sys-init.i"

; ** Eigene Variablen initialisieren **
; -------------------------------------
  CNOP 0,4
init_own_variables

; **** PT-Replay ****
  IFD pt_v2.3a
    PT2_INIT_VARIABLES
  ENDC
  IFD pt_v3.0b
    PT3_INIT_VARIABLES
  ENDC

; **** Viewport 1 ****
  move.l  extra_pf1(a3),vp1_pf1_construction2(a3)
  move.l  extra_pf2(a3),vp1_pf1_display(a3)
  rts

; ** Alle Initialisierungsroutinen ausführen **
; ---------------------------------------------
  CNOP 0,4
init_all
  bsr.s   pt_DetectSysFrequ
  bsr.s   init_CIA_timers
  bsr     pt_InitRegisters
  bsr     pt_InitAudTempStrucs
  bsr     pt_ExamineSongStruc
  IFEQ pt_finetune
    bsr     pt_InitFtuPeriodTableStarts
  ENDC
  bsr     init_sprites
  bsr     init_first_copperlist
  bra     init_second_copperlist

; ** Detect system frequency NTSC/PAL **
; --------------------------------------
  PT_DETECT_SYS_FREQUENCY

; ** CIA-Timer initialisieren **
; ------------------------------
  CNOP 0,4
init_CIA_timers

; **** PT-Replay ****
  PT_INIT_TIMERS
  rts

; ** Audioregister initialisieren **
; ----------------------------------
   PT_INIT_REGISTERS

; ** Temporäre Audio-Kanal-Struktur initialisieren **
; ---------------------------------------------------
   PT_INIT_AUDIO_TEMP_STRUCTURES

; ** Höchstes Pattern ermitteln und Tabelle mit Zeigern auf Samples initialisieren **
; -----------------------------------------------------------------------------------
   PT_EXAMINE_SONG_STRUCTURE

  IFEQ pt_finetune
; ** FineTuning-Offset-Tabelle initialisieren **
; ----------------------------------------------
    PT_INIT_FINETUNING_PERIOD_TABLE_STARTS
  ENDC


; ** Sprites initialisieren **
; ----------------------------
  CNOP 0,4
init_sprites
  bsr.s   spr_init_pointers_table
  bra.s   bg_init_attached_sprites_cluster

; ** Tabelle mit Zeigern auf Sprites initialisieren **
; ----------------------------------------------------
  INIT_SPRITE_POINTERS_TABLE

; ** Spritestrukturen initialisieren **
; -------------------------------------
  INIT_ATTACHED_SPRITES_CLUSTER bg,spr_pointers_display,bg_image_x_position,bg_image_y_position,spr_x_size2,bg_image_y_size,,,REPEAT


; ** 1. Copperliste initialisieren **
; -----------------------------------
  CNOP 0,4
init_first_copperlist
  move.l  cl1_display(a3),a0
  bsr.s   cl1_init_playfield_registers
  bsr.s   cl1_init_sprite_pointers
  bsr     cl1_init_color_registers
; **** Viewport 1 ****
  bsr     cl1_vp1_init_playfield_registers
  bsr     cl1_vp1_init_color_registers
  bsr     cl1_init_copint
  COPLISTEND
  bra     cl1_set_sprite_pointers

  COP_INIT_PLAYFIELD_REGISTERS cl1,BLANKSPR

  COP_INIT_SPRITE_POINTERS cl1

  CNOP 0,4
cl1_init_color_registers
  COP_INIT_COLORHI COLOR00,1,pf1_color_table
  COP_INIT_COLORHI COLOR16,16,spr_color_table

  COP_SELECT_COLORLO_BANK 0
  COP_INIT_COLORLO COLOR00,1,pf1_color_table
  COP_INIT_COLORLO COLOR16,16,spr_color_table
  rts

  COP_INIT_BITPLANE_POINTERS cl1

; **** Viewport 1 ****
  COP_INIT_PLAYFIELD_REGISTERS cl1,,vp1

  CNOP 0,4
cl1_vp1_init_color_registers
  rts

  CNOP 0,4
cl1_vp1_init_bitplane_pointers
  MOVEF.W BPL1PTH,d0
  moveq   #(extra_pf1_depth*2)-1,d7 ;Anzahl der Bitplanes
cl1_vp1_init_bitplane_pointers_loop
  move.w  d0,(a0)            ;BPLxPTH/L
  addq.w  #2,d0              ;nächstes Register
  addq.w  #4,a0              ;nächster Eintrag in CL
  dbf     d7,cl1_vp1_init_bitplane_pointers_loop
  rts

  CNOP 0,4
cl1_vp1_set_bitplane_pointers
  move.l  cl1_display(a3),a0 ;CL
  ADDF.W  cl1_extension1_entry+cl1_ext1_BPL1PTH+2,a0
  move.l  extra_pf1(a3),a1    ;Zeiger auf erste Plane
  moveq   #extra_pf1_depth-1,d7 ;Anzahl der Bitplanes
cl1_vp1_set_bitplane_pointers_loop
  move.w  (a1)+,(a0)         ;High-Wert
  addq.w  #8,a0              ;nächter Playfieldzeiger
  move.w  (a1)+,4-8(a0)      ;Low-Wert
  dbf     d7,cl1_vp1_set_bitplane_pointers_loop
  rts

  COP_INIT_COPINT cl1,cl1_HSTART,cl1_VSTART,YWRAP

  COP_SET_SPRITE_POINTERS cl1,display,spr_number


; ** 2. Copperliste initialisieren **
; -----------------------------------
  CNOP 0,4
init_second_copperlist
  move.l  cl2_display(a3),a0
  COPLISTEND
  rts


; ** CIA-Timer starten **
; -----------------------

  INCLUDE "continuous-timers-start.i"


; ## Hauptprogramm ##
; -------------------
; a3 ... Basisadresse aller Variablen
; a4 ... CIA-A-Base
; a5 ... CIA-B-Base
; a6 ... DMACONR
  CNOP 0,4
main_routine
  bsr.s   no_sync_routines
  bra.s   beam_routines


; ## Routinen, die nicht mit der Bildwiederholfrequenz gekoppelt sind ##
; ----------------------------------------------------------------------
  CNOP 0,4
no_sync_routines
  rts


; ## Rasterstahl-Routinen ##
; --------------------------
  CNOP 0,4
beam_routines
  bsr     wait_copint
  IFEQ pt_music_fader
    bsr.s   pt_mouse_handler
  ENDC
  btst    #CIAB_GAMEPORT0,CIAPRA(a4) ;Auf linke Maustaste warten
  bne.s   beam_routines
  rts

  IFEQ pt_music_fader
; ** Mouse-Handler **
; -------------------
    CNOP 0,4
pt_mouse_handler
    btst    #POTINPB_DATLY,POTINP-DMACONR(a6) ;Rechte Mustaste gedrückt?
    bne.s   pt_no_mouse_handler ;Nein -> verzweige
    clr.w   pt_fade_out_music_state(a3) ;Fader an
pt_no_mouse_handler
    rts
  ENDC


; ## Interrupt-Routinen ##
; ------------------------
  
  INCLUDE "int-autovectors-handlers.i"

  IFEQ pt_ciatiming
; ** CIA-B timer A interrupt server **
; ------------------------------------
  CNOP 0,4
CIAB_TA_int_server
  ENDC

  IFNE pt_ciatiming
; ** Vertical blank interrupt server **
; -------------------------------------
  CNOP 0,4
VERTB_int_server
  ENDC

  IFEQ pt_music_fader
    bsr.s   pt_fade_out_music
    bra.s   pt_PlayMusic

; ** Musik ausblenden **
; ----------------------
    PT_FADE_OUT

    CNOP 0,4
  ENDC

; ** PT-replay routine **
; -----------------------
  IFD pt_v2.3a
    PT2_REPLAY
  ENDC
  IFD pt_v3.0b
    PT3_REPLAY
  ENDC

; ** CIA-B Timer B interrupt server **
  CNOP 0,4
CIAB_TB_int_server
  PT_TIMER_INTERRUPT_SERVER

; ** Level-6-Interrupt-Server **
; ------------------------------
  CNOP 0,4
EXTER_int_server
  rts

; ** Level-7-Interrupt-Server **
; ------------------------------
  CNOP 0,4
NMI_int_server
  rts


; ** Timer stoppen **
; -------------------

  INCLUDE "continuous-timers-stop.i"


; ## System wieder in Ausganszustand zurücksetzen ##
; --------------------------------------------------

  INCLUDE "sys-return.i"


; ## Hilfsroutinen ##
; -------------------

  INCLUDE "help-routines.i"


; ## Speicherstellen für Tabellen und Strukturen ##
; -------------------------------------------------

  INCLUDE "sys-structures.i"

; ** Farben des ersten Playfields **
; ----------------------------------
  CNOP 0,4
pf1_color_table
  DC.L COLOR00BITS

; ** Farben der Sprites **
; ------------------------
spr_color_table
  INCLUDE "Daten:Asm-Sources.AGA/30/colortables/256x208x16-Desert-Sunset2.ct"

; ** Adressen der Sprites **
; --------------------------
spr_pointers_display
  DS.L spr_number

; **** PT-Replay ****
; ** Tables for effect commands **
; --------------------------------
; ** "Invert Loop" **
  INCLUDE "music-tracker/pt-invert-table.i"

; ** "Vibrato/Tremolo" **
  INCLUDE "music-tracker/pt-vibrato-tremolo-table.i"

; ** "Arpeggio/Tone Portamento" **
  IFD pt_v2.3a
    INCLUDE "music-tracker/pt2-period-table.i"
  ENDC
  IFD pt_v3.0b
    INCLUDE "music-tracker/pt3-period-table.i"
  ENDC

; ** Temporary channel structures **
; ----------------------------------
  INCLUDE "music-tracker/pt-temp-channel-data-tables.i"

; ** Pointers to samples **
; -------------------------
  INCLUDE "music-tracker/pt-sample-starts-table.i"

; ** Pionters to priod tables for different tuning **
; ---------------------------------------------------
  INCLUDE "music-tracker/pt-finetune-starts-table.i"


; ## Speicherstellen allgemein ##
; -------------------------------

  INCLUDE "sys-variables.i"


; ## Speicherstellen für Namen ##
; -------------------------------

  INCLUDE "sys-names.i"


; ## Speicherstellen für Texte ##
; -------------------------------

  INCLUDE "error-texts.i"

; ** Programmversion für Version-Befehl **
; ----------------------------------------
prg_version DC.B "$VER: RSE-30 1.0 beta (17.5.24)",TRUE
  EVEN


; ## Audiodaten nachladen ##
; --------------------------

; **** PT-Replay ****
  IFEQ pt_split_module
pt_auddata SECTION pt_audio,DATA
    INCBIN "Daten:Asm-Sources.AGA/30/modules/MOD.lhs_brd.song"
pt_audsmps SECTION pt_audio2,DATA_C
    INCBIN "Daten:Asm-Sources.AGA/30/modules/MOD.lhs_brd.smps"
  ELSE
pt_auddata SECTION pt_audio,DATA_C
    INCBIN "Daten:Asm-Sources.AGA/30/modules/MOD.lhs_brd"
  ENDC


; ## Grafikdaten nachladen ##
; ---------------------------

; **** Hintergrundbild ****
bg_image_data SECTION gfx1,DATA
  INCBIN "Daten:Asm-Sources.AGA/30/graphics/256x208x16-Desert-Sunset2.rawblit"

  END
